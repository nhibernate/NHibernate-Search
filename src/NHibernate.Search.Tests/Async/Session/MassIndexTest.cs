//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections;
using System.Collections.Generic;
using Lucene.Net.Analysis.Core;
using Lucene.Net.QueryParsers.Classic;
using Lucene.Net.Util;
using NHibernate.Search.Impl;
using NUnit.Framework;

namespace NHibernate.Search.Tests.Session
{
    using System.Threading.Tasks;
    [TestFixture]
    public class MassIndexTestAsync : SearchTestCase
    {
        protected override IEnumerable<string> Mappings
        {
            get { return new string[] { "Session.Email.hbm.xml" }; }
        }

        [Test]
        public async Task BatchSizeAsync()
        {
            var s = Search.CreateFullTextSession(OpenSession());
            var tx = s.BeginTransaction();
            int loop = 14;
            for (int i = 0; i < loop; i++)
            {
                using (var cmd = s.Connection.CreateCommand())
                {
                    tx.Enlist(cmd);
                    cmd.CommandText = "insert into Email(Id, Title, Body, Header) values( + " + (i + 1)
                                      + ", 'Bob Sponge', 'Meet the guys who create the software', 'nope')";
                    await (cmd.ExecuteNonQueryAsync());
                }
            }
            await (tx.CommitAsync());
            s.Close();

            s = new FullTextSessionImpl(OpenSession());
            tx = s.BeginTransaction();
            int index = 0;

            foreach (object entity in await (s.CreateCriteria(typeof(Email)).ListAsync()))
            {
                index++;
                s.Index(entity);

                // NB Java uses a scrollable result, so clear works for them, but not for us I think
                //if (index % 5 == 0)
                //{
                //    s.Clear();
                //}
            }
            await (tx.CommitAsync());
            s.Clear();

            tx = s.BeginTransaction();
            QueryParser parser = new QueryParser(LuceneVersion.LUCENE_48, "id", new StopAnalyzer(LuceneVersion.LUCENE_48));
            IList result = await (s.CreateFullTextQuery(parser.Parse("Body:create")).ListAsync());
            Assert.AreEqual(14, result.Count);

            await (s.DeleteAsync("from System.Object"));
            await (tx.CommitAsync());
            s.Close();
        }

        [Test]
        public async Task TransactionalAsync()
        {
            IFullTextSession s = Search.CreateFullTextSession(OpenSession());
            ITransaction tx = s.BeginTransaction();
            int loop = 4;
            for (int i = 0; i < loop; i++)
            {
                await (s.SaveAsync(new Email(i + 1, "JBoss World Berlin", "Meet the guys who wrote the software")));
            }
            await (tx.CommitAsync());
            s.Close();

            // check non created object does get found!!1
            s = new FullTextSessionImpl(OpenSession());
            tx = s.BeginTransaction();
            QueryParser parser = new QueryParser(LuceneVersion.LUCENE_48, "id", new StopAnalyzer(LuceneVersion.LUCENE_48));
            IList result = await (s.CreateFullTextQuery(parser.Parse("Body:create")).ListAsync());
            Assert.IsEmpty(result);
            await (tx.CommitAsync());
            s.Close();

            s = new FullTextSessionImpl(OpenSession());
            var t = s.BeginTransaction();
            using (var cmd = s.Connection.CreateCommand())
            {
                t.Enlist(cmd);
                cmd.CommandText = "update Email set Body='Meet the guys who write the software'";
                await (cmd.ExecuteNonQueryAsync());

                cmd.CommandText = "insert into Email(Id, Title, Body, Header) values( + "
                                  + (loop + 1) + ", 'Bob Sponge', 'Meet the guys who create the software', 'nope')";
                await (cmd.ExecuteNonQueryAsync());
            }

            await (t.CommitAsync());
            s.Close();

            s = new FullTextSessionImpl(OpenSession());
            tx = s.BeginTransaction();
            parser = new QueryParser(LuceneVersion.LUCENE_48, "id", new StopAnalyzer(LuceneVersion.LUCENE_48));
            result = await (s.CreateFullTextQuery(parser.Parse("Body:write")).ListAsync());
            Assert.IsEmpty(result);
            result = await (s.CreateCriteria(typeof(Email)).ListAsync());
            for (int i = 0; i < loop / 2; i++)
            {
                s.Index(result[i]);
            }
            await (tx.CommitAsync()); //do the process

            s.Index(result[(loop / 2)]); //do the process out of tx

            tx = s.BeginTransaction();
            for (int i = loop / 2 + 1; i < loop; i++)
            {
                s.Index(result[i]);
            }
            await (tx.CommitAsync()); //do the process
            s.Close();

            s = Search.CreateFullTextSession(OpenSession());
            tx = s.BeginTransaction();

            // object never indexed
            Email email = (Email)await (s.GetAsync(typeof(Email), loop + 1));
            s.Index(email);
            await (tx.CommitAsync());
            s.Close();

            // check non indexed object get indexed by s.index
            s = new FullTextSessionImpl(OpenSession());
            tx = s.BeginTransaction();
            result = await (s.CreateFullTextQuery(parser.Parse("Body:create")).ListAsync());
            Assert.AreEqual(1, result.Count);
            await (tx.CommitAsync());

            await (s.DeleteAsync("from System.Object"));
            await (s.FlushAsync());

            s.Close();
        }
    }
}